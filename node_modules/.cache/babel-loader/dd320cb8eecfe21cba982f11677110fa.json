{"ast":null,"code":"var booksRequested = function booksRequested() {\n  return {\n    type: 'FETCH_BOOKS_REQUEST'\n  };\n};\nvar booksLoaded = function booksLoaded(newBooks) {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS',\n    payload: newBooks\n  };\n};\nvar booksError = function booksError(error) {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error\n  };\n};\nexport var bookAddedToCart = function bookAddedToCart(bookId) {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: bookId\n  };\n};\nexport var bookrRemovedFromCart = function bookrRemovedFromCart(bookId) {\n  return {\n    type: 'BOOK_REMOVED__CART',\n    payload: bookId\n  };\n};\nvar fetchBooks = function fetchBooks(bookstoreService, dispatch) {\n  return function () {\n    dispatch(booksRequested());\n    bookstoreService.getBooks().then(function (data) {\n      return dispatch(booksLoaded(data));\n    }).catch(function (err) {\n      return dispatch(booksError(err));\n    });\n  };\n};\nexport { fetchBooks };","map":{"version":3,"names":["booksRequested","type","booksLoaded","newBooks","payload","booksError","error","bookAddedToCart","bookId","bookrRemovedFromCart","fetchBooks","bookstoreService","dispatch","getBooks","then","data","catch","err"],"sources":["C:/Users/Professional/Desktop/уроки/React уроки/Redax/Redux-re stor/my-app/src/actions/index.js"],"sourcesContent":["\r\nconst booksRequested = () => {\r\n  return {\r\n    type: 'FETCH_BOOKS_REQUEST'\r\n  }\r\n}\r\n\r\nconst booksLoaded = (newBooks) => {\r\n  return {\r\n    type: 'FETCH_BOOKS_SUCCESS',\r\n    payload: newBooks\r\n  };\r\n};\r\n\r\n\r\n\r\nconst booksError = (error) => {\r\n  return {\r\n    type: 'FETCH_BOOKS_FAILURE',\r\n    payload: error\r\n  };\r\n};\r\n\r\nexport const bookAddedToCart = (bookId) => {\r\n  return {\r\n    type: 'BOOK_ADDED_TO_CART',\r\n    payload: bookId\r\n  };\r\n};\r\n\r\nexport const bookrRemovedFromCart = (bookId) => {\r\n  return {\r\n    type: 'BOOK_REMOVED__CART',\r\n    payload: bookId\r\n  };\r\n};\r\n\r\n const fetchBooks = (bookstoreService, dispatch) => () => {\r\n  dispatch(booksRequested());\r\n  bookstoreService.getBooks()\r\n    .then((data) => dispatch(booksLoaded(data)))\r\n    .catch((err) => dispatch(booksError(err)));\r\n};\r\n\r\nexport {\r\n  fetchBooks\r\n};\r\n"],"mappings":"AACA,IAAMA,cAAc,GAAG,SAAjBA,cAAcA,CAAA,EAAS;EAC3B,OAAO;IACLC,IAAI,EAAE;EACR,CAAC;AACH,CAAC;AAED,IAAMC,WAAW,GAAG,SAAdA,WAAWA,CAAIC,QAAQ,EAAK;EAChC,OAAO;IACLF,IAAI,EAAE,qBAAqB;IAC3BG,OAAO,EAAED;EACX,CAAC;AACH,CAAC;AAID,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAIC,KAAK,EAAK;EAC5B,OAAO;IACLL,IAAI,EAAE,qBAAqB;IAC3BG,OAAO,EAAEE;EACX,CAAC;AACH,CAAC;AAED,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,MAAM,EAAK;EACzC,OAAO;IACLP,IAAI,EAAE,oBAAoB;IAC1BG,OAAO,EAAEI;EACX,CAAC;AACH,CAAC;AAED,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoBA,CAAID,MAAM,EAAK;EAC9C,OAAO;IACLP,IAAI,EAAE,oBAAoB;IAC1BG,OAAO,EAAEI;EACX,CAAC;AACH,CAAC;AAEA,IAAME,UAAU,GAAG,SAAbA,UAAUA,CAAIC,gBAAgB,EAAEC,QAAQ;EAAA,OAAK,YAAM;IACxDA,QAAQ,CAACZ,cAAc,CAAC,CAAC,CAAC;IAC1BW,gBAAgB,CAACE,QAAQ,CAAC,CAAC,CACxBC,IAAI,CAAC,UAACC,IAAI;MAAA,OAAKH,QAAQ,CAACV,WAAW,CAACa,IAAI,CAAC,CAAC;IAAA,EAAC,CAC3CC,KAAK,CAAC,UAACC,GAAG;MAAA,OAAKL,QAAQ,CAACP,UAAU,CAACY,GAAG,CAAC,CAAC;IAAA,EAAC;EAC9C,CAAC;AAAA;AAED,SACEP,UAAU"},"metadata":{},"sourceType":"module"}